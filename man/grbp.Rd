% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{grbp}
\alias{grbp}
\title{Gradient Function for Beta Power Log-Likelihood}
\usage{
grbp(par, data)
}
\arguments{
\item{par}{NumericVector of length 3 containing parameters (γ, δ, λ) in that order.
All parameters must be positive.}

\item{data}{NumericVector of observations, where all values must be in the open interval (0,1).}
}
\value{
NumericVector of length 3 containing the gradient components (partial derivatives)
of the negative log-likelihood with respect to each parameter (γ, δ, λ).
Returns a vector of NaN values if any parameters or data values are invalid.
}
\description{
Calculates the gradient vector (partial derivatives) of the negative log-likelihood
function for the Beta Power (BP) distribution, also known as McDonald distribution.
This function provides the exact gradient needed for efficient optimization in
maximum likelihood estimation. The BP is a submodel of GKw with α = 1 and β = 1 fixed.
}
\details{
The gradient vector contains the following partial derivatives of the negative log-likelihood:

\deqn{
\frac{\partial \ell}{\partial \gamma} = -n[\psi(\gamma+\delta+1) - \psi(\gamma)] -
\lambda\sum_{i=1}^{n}\log(x_i)
}

\deqn{
\frac{\partial \ell}{\partial \delta} = -n[\psi(\gamma+\delta+1) - \psi(\delta+1)] -
\sum_{i=1}^{n}\log(1-x_i^{\lambda})
}

\deqn{
\frac{\partial \ell}{\partial \lambda} = -\frac{n}{\lambda} - \gamma\sum_{i=1}^{n}\log(x_i) +
\delta\sum_{i=1}^{n}\frac{x_i^{\lambda}\log(x_i)}{1-x_i^{\lambda}}
}

where:
\itemize{
\item \deqn{\psi} is the digamma function (derivative of the log-gamma function)
}

The implementation includes several numerical safeguards:
\itemize{
\item Parameter and data validation with appropriate error handling
\item Clamping of intermediate values to avoid numerical underflow/overflow
\item Efficient vector operations using Armadillo C++ library
}

The returned gradient is negated to align with minimization of negative log-likelihood
in optimization routines.
}
\examples{
\dontrun{
# Generate sample data from a BP distribution
set.seed(123)
x <- rbp(100, 2, 3, 0.5)
hist(x, breaks = 20, main = "BP(2, 3, 0.5) Sample")

# Use in optimization with Hessian-based methods
result <- optim(c(0.5, 0.5, 0.5), llbp, method = "BFGS",
                hessian = TRUE, data = x)

# Compare numerical and analytical derivatives
num_grad <- numDeriv::grad(llbp, x = result$par, data = x)
num_hess <- numDeriv::hessian(llbp, x = result$par, data = x)

ana_grad <- grbp(result$par, data = x)
ana_hess <- hsbp(result$par, data = x)

# Check differences (should be very small)
round(num_grad - ana_grad, 4)
round(num_hess - ana_hess, 4)
}

}
\references{
McDonald, J. B. (1984). Some generalized functions for the size distribution of income.
Econometrica, 52(3), 647-665.

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
Journal of Statistical Computation and Simulation, 81(7), 883-898.
}
\seealso{
\code{\link[gkwreg]{llbp}} for the negative log-likelihood function,
\code{\link[gkwreg]{hsbp}} for the Hessian matrix of the BP log-likelihood,
\code{\link[gkwreg]{dbp}} for the BP density function,
}
