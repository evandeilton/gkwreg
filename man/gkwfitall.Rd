% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gkwfitall.R
\name{gkwfitall}
\alias{gkwfitall}
\title{Fit All or Selected Generalized Kumaraswamy Family Distributions and Compare Them}
\usage{
gkwfitall(
  data,
  family = NULL,
  method = "nlminb",
  use_moments = FALSE,
  profile = TRUE,
  npoints = 20,
  plot = TRUE,
  optimizer.control = list(),
  gof_tests = c("ks", "ad", "cvm"),
  theme_fn = ggplot2::theme_minimal,
  export_report = FALSE,
  report_file = "gkw_comparison_report.html"
)
}
\arguments{
\item{data}{A numeric vector with values strictly between 0 and 1.}

\item{family}{A character vector specifying which families to fit. Options are
"gkw", "bkw", "kkw", "ekw", "mc", "kw", and "beta". If \code{NULL} (default),
all seven distributions will be fitted.}

\item{method}{Optimization method to use. One of: \code{"nlminb"} (default), \code{"Nelder-Mead"},
\code{"BFGS"}, \code{"CG"}, \code{"L-BFGS-B"} or \code{"SANN"}.}

\item{use_moments}{Logical; if \code{TRUE}, attempts to use method of moments estimates
as initial values. Default: \code{FALSE}.}

\item{profile}{Logical; if \code{TRUE}, computes likelihood profiles for parameters. Default: \code{TRUE}.}

\item{npoints}{Integer; number of points to use in profile likelihood calculations. Default: 20.}

\item{plot}{Logical; if \code{TRUE}, generates comparison plots. Default: \code{TRUE}.}

\item{optimizer.control}{List of control parameters passed to the chosen optimizer. Default: \code{list()}.}

\item{gof_tests}{Character vector specifying which goodness-of-fit tests to perform.
Options are "ks" (Kolmogorov-Smirnov), "ad" (Anderson-Darling), and "cvm" (Cramer-von Mises).
Default: c("ks", "ad", "cvm").}

\item{theme_fn}{Function to apply a custom theme to plots. Default: \code{ggplot2::theme_minimal}.}

\item{export_report}{Logical; if \code{TRUE}, generates an R Markdown report summarizing results.
Default: \code{FALSE}.}

\item{report_file}{Character; file path for the R Markdown report if \code{export_report = TRUE}.
Default: "gkw_comparison_report.html".}
}
\value{
A list containing:
\item{fits}{A list of \code{gkwfit} objects for all fitted distribution families.}
\item{comparison}{A data frame with comparison statistics (AIC, BIC, log-likelihood, etc.) for all models.}
\item{plots}{A ggplot2 object with diagnostic plots for all models if \code{plot = TRUE}.}
\item{metrics}{A list with additional comparative metrics including RMSE and MAE.}
}
\description{
Fits all seven or a user-specified subset of distributions from the Generalized
Kumaraswamy (GKw) family to data using maximum likelihood estimation through
Template Model Builder (TMB). It provides a comprehensive comparison of fit quality
across the selected families through statistics and visualization.
}
\details{
This function fits all seven distributions in the GKw family:
\itemize{
\item \strong{GKw}: 5 parameters (\eqn{\alpha, \beta, \gamma, \delta, \lambda}) - All positive.
\item \strong{BKw}: 4 parameters (\eqn{\alpha, \beta, \gamma, \delta}), \eqn{\lambda = 1} fixed - All positive.
\item \strong{KKw}: 4 parameters (\eqn{\alpha, \beta, \delta, \lambda}), \eqn{\gamma = 1} fixed - All positive.
\item \strong{EKw}: 3 parameters (\eqn{\alpha, \beta, \lambda}), \eqn{\gamma = 1, \delta = 0} fixed - All positive.
\item \strong{Mc} (McDonald / Beta Power): 3 parameters (\eqn{\gamma, \delta, \lambda}), \eqn{\alpha = 1, \beta = 1} fixed - All positive.
\item \strong{Kw} (Kumaraswamy): 2 parameters (\eqn{\alpha, \beta}), \eqn{\gamma = 1, \delta = 0, \lambda = 1} fixed - All positive.
\item \strong{Beta}: 2 parameters (\eqn{\gamma, \delta}), \eqn{\alpha = 1, \beta = 1, \lambda = 1} fixed - All positive.
}

The function generates comparison statistics including AIC, BIC, AICc, log-likelihood values,
and various goodness-of-fit measures. It also produces visualizations with all fitted
distributions overlaid on diagnostic plots.
}
\examples{
\dontrun{
# Example 1: Basic usage - Fitting all distributions to beta-distributed data
set.seed(2203) # Set seed for reproducibility
# Generate 1000 observations from a Beta(2,5) distribution
y <- rbeta(1000, shape1 = 2, shape2 = 5)
# Fit all GKw family distributions
all_fits <- gkwfitall(y)
# View comparison statistics sorted by AIC
all_fits$comparison[order(all_fits$comparison$AIC), ]
# Plot the results
print(all_fits$plots)
#
# Example 2: Fitting selected distributions to Kumaraswamy data
set.seed(2203)

# Fit selected distributions for comparison
selected_fits <- gkwfitall(y, family = c("kw", "bkw", "beta", "gkw"))
# View comparison statistics
selected_fits$comparison
#
# Example 3: Using method of moments for initial values
# Fit all distributions with moment-based starting values
mom_fits <- gkwfitall(y, use_moments = TRUE)

# Example 4: Using different optimization methods
# Try BFGS optimization method
bfgs_fits <- gkwfitall(y, method = "BFGS")

# Compare convergence with and without method of moments
rbind(
  all_fits$comparison$AIC,
  mom_fits$comparison$AIC,
  bfgs_fits$comparison$AIC
)

# Example 5: Working with real data
# Load data from betareg package
library(betareg)
data("ReadingSkills")
y <- ReadingSkills$accuracy # Already in (0,1) range
# Fit all distributions to reading skills data
real_fits <- gkwfitall(y)
# View comparison metrics
real_fits$comparison[order(real_fits$comparison$AIC), ]
# Extract the best model based on AIC
best_model_name <- real_fits$comparison$Family[which.min(real_fits$comparison$AIC)]
best_model <- real_fits$fits[[best_model_name]]
summary(best_model)
#
# Example 6: Generating a comprehensive report
# Fit models and generate HTML report
report_fits <- gkwfitall(y,
  export_report = TRUE,
  report_file = "reading_skills_analysis.html"
)

# Example 7: Using profile likelihood
# Fit models with profile likelihood computation
profile_fits <- gkwfitall(data_kw,
  profile = TRUE,
  npoints = 30,
  family = c("kw", "beta")
)
# Plot profile likelihood for best model parameters
best_profile_model <- profile_fits$fits[[which.min(profile_fits$comparison$AIC)]]
plot(gkwgof(best_profile_model, print_summary = FALSE), title = "")

# Example 8: Customizing plots with a different theme

custom_fits <- gkwfitall(data_kw,
  family = c("kw", "beta", "gkw"),
  theme_fn = theme_classic
)
# Display the customized plots
print(custom_fits$plots)

# Example 9: Modified optimization controls
# Increase maximum iterations and set higher tolerance
custom_control <- list(
  maxit = 1000, # Maximum iterations
  trace = 0, # No tracing
  rel.tol = 1e-10 # Tighter tolerance
)
# Fit with custom optimization controls
control_fits <- gkwfitall(data_kw,
  optimizer.control = custom_control,
  method = "L-BFGS-B"
)
# Check if optimization improved
print(control_fits$comparison)

# Example 10: Model selection for nested models using likelihood ratio tests
# Function to perform likelihood ratio test between nested models
perform_lrt <- function(full_model, reduced_model, df_diff) {
  lr_stat <- 2 * (full_model$loglik - reduced_model$loglik)
  p_value <- 1 - pchisq(lr_stat, df = df_diff)
  return(list(statistic = lr_stat, p_value = p_value))
}

# Fit models for LR testing
nested_fits <- gkwfitall(data_kw, family = c("gkw", "bkw", "kw"))

# Test if GKw is significantly better than BKw (testing lambda = 1)
lrt_gkw_bkw <- perform_lrt(
  nested_fits$fits$gkw, # Full model (unrestricted)
  nested_fits$fits$bkw, # Reduced model (lambda = 1)
  df_diff = 1 # Testing 1 parameter (lambda)
)
#
# Test if BKw is significantly better than Kw (testing gamma = 1, delta = 1)
lrt_bkw_kw <- perform_lrt(
  nested_fits$fits$bkw, # Full model (unrestricted)
  nested_fits$fits$kw, # Reduced model (gamma = delta = 1)
  df_diff = 2 # Testing 2 parameters
)
#
# Display LRT results
cat("Likelihood Ratio Tests for Nested Models:\n")
cat("GKw vs BKw (lambda = 1):\n")
cat("  Statistic:", round(lrt_gkw_bkw$statistic, 4), "\n")
cat("  P-value:", format.pval(lrt_gkw_bkw$p_value), "\n")
cat("  Decision:", ifelse(lrt_gkw_bkw$p_value < 0.05,
  "Reject H0 - GKw is necessary",
  "Fail to reject H0 - BKw is adequate"
), "\n\n")

cat("BKw vs Kw (gamma = delta = 1):\n")
cat("  Statistic:", round(lrt_bkw_kw$statistic, 4), "\n")
cat("  P-value:", format.pval(lrt_bkw_kw$p_value), "\n")
cat("  Decision:", ifelse(lrt_bkw_kw$p_value < 0.05,
  "Reject H0 - BKw is necessary",
  "Fail to reject H0 - Kw is adequate"
), "\n")
}

}
\author{
Lopes, J. E.
}
