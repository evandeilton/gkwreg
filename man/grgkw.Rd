% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{grgkw}
\alias{grgkw}
\title{Gradient Function for Generalized Kumaraswamy Log-Likelihood}
\usage{
grgkw(par, data)
}
\arguments{
\item{par}{NumericVector of length 5 containing parameters (α, β, γ, δ, λ) in that order.
All parameters must be positive.}

\item{data}{NumericVector of observations, where all values must be in the open interval (0,1).}
}
\value{
NumericVector of length 5 containing the gradient components (partial derivatives)
of the negative log-likelihood with respect to each parameter (α, β, γ, δ, λ).
Returns a vector of NaN values if any parameters or data values are invalid.
}
\description{
Calculates the gradient vector (partial derivatives) of the negative log-likelihood
function for the Generalized Kumaraswamy (GKw) distribution. This function provides
the exact gradient needed for efficient optimization in maximum likelihood estimation.
}
\details{
The gradient vector contains the following partial derivatives of the negative log-likelihood:

\deqn{
\frac{\partial \ell}{\partial \alpha} = \frac{n}{\alpha} + \sum_{i=1}^{n}\log(x_i) -
\sum_{i=1}^{n}\left[x_i^{\alpha} \log(x_i) \left(\frac{\beta-1}{v_i} -
\frac{(\gamma\lambda-1) \beta v_i^{\beta-1}}{w_i} +
\frac{\delta \lambda \beta v_i^{\beta-1} w_i^{\lambda-1}}{z_i}\right)\right]
}

\deqn{
\frac{\partial \ell}{\partial \beta} = \frac{n}{\beta} + \sum_{i=1}^{n}\log(v_i) -
\sum_{i=1}^{n}\left[v_i^{\beta} \log(v_i) \left(\frac{\gamma\lambda-1}{w_i} -
\frac{\delta \lambda w_i^{\lambda-1}}{z_i}\right)\right]
}

\deqn{
\frac{\partial \ell}{\partial \gamma} = -n[\psi(\gamma) - \psi(\gamma+\delta+1)] +
\lambda\sum_{i=1}^{n}\log(w_i)
}

\deqn{
\frac{\partial \ell}{\partial \delta} = -n[\psi(\delta+1) - \psi(\gamma+\delta+1)] +
\sum_{i=1}^{n}\log(z_i)
}

\deqn{
\frac{\partial \ell}{\partial \lambda} = \frac{n}{\lambda} +
\gamma\sum_{i=1}^{n}\log(w_i) - \delta\sum_{i=1}^{n}\frac{w_i^{\lambda}\log(w_i)}{z_i}
}

where:
\itemize{
\item \deqn{v_i = 1 - x_i^{\alpha}}
\item \deqn{w_i = 1 - v_i^{\beta} = 1 - (1-x_i^{\alpha})^{\beta}}
\item \deqn{z_i = 1 - w_i^{\lambda} = 1 - (1-(1-x_i^{\alpha})^{\beta})^{\lambda}}
\item \deqn{\psi} is the digamma function (derivative of the log-gamma function)
}

The implementation includes several numerical safeguards:
\itemize{
\item Parameter and data validation with appropriate error handling
\item Clamping of intermediate values to avoid numerical underflow/overflow
\item Efficient vector operations using Armadillo C++ library
}

The returned gradient is negated to align with minimization of negative log-likelihood
in optimization routines.
}
\examples{
\dontrun{
# Generate sample data from a GKw distribution
set.seed(123)
x <- rgkw(100, 2, 3, 1.0, 0.5, 0.5)
hist(x, breaks = 20, main = "GKw(2, 3, 1.0, 0.5, 0.5) Sample")

# Use in optimization with Hessian-based methods
result <- optim(c(0.5, 0.5, 0.5, 0.5, 0.5), llgkw, method = "BFGS",
                hessian = TRUE, data = x)

# Compare numerical and analytical derivatives
num_grad <- numDeriv::grad(llgkw, x = result$par, data = x)
num_hess <- numDeriv::hessian(llgkw, x = result$par, data = x)

ana_grad <- grgkw(result$par, data = x)
ana_hess <- hsgkw(result$par, data = x)

# Check differences (should be very small)
round(num_grad - ana_grad, 4)
round(num_hess - ana_hess, 4)

}

}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded random processes.
Journal of Hydrology, 46(1-2), 79-88.

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
Journal of Statistical Computation and Simulation, 81(7), 883-898.
}
\seealso{
\code{\link[gkwreg]{llgkw}} for the negative log-likelihood function,
\code{\link[gkwreg]{hsgkw}} for the Hessian matrix of the GKw log-likelihood,
\code{\link[gkwreg]{dgkw}} for the GKw density function,
}
