% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gkwfit.R
\name{gkwfit}
\alias{gkwfit}
\title{Fit Generalized Kumaraswamy Distribution via Maximum Likelihood Estimation using TMB}
\usage{
gkwfit(
  data,
  family = "gkw",
  start = NULL,
  fixed = NULL,
  method = "nlminb",
  use_moments = FALSE,
  hessian = TRUE,
  profile = FALSE,
  npoints = 20,
  plot = TRUE,
  conf.level = 0.95,
  optimizer.control = list(),
  submodels = FALSE,
  silent = FALSE,
  ...
)
}
\arguments{
\item{data}{A numeric vector with values strictly between 0 and 1. Values at the boundaries
(0 or 1) may cause issues; consider slight adjustments if necessary (see Details).}

\item{family}{A character string specifying the distribution family. One of: \code{"gkw"} (default),
\code{"bkw"}, \code{"kkw"}, \code{"ekw"}, \code{"mc"}, \code{"kw"}, or \code{"beta"}. See Details for parameter specifications.}

\item{start}{Optional list with initial parameter values (using natural parameter names like \code{alpha}, \code{beta}, etc.).
If \code{NULL}, reasonable starting values will be determined, potentially using the method of moments if \code{use_moments = TRUE}.}

\item{fixed}{Optional list of parameters to be held fixed at specific values during estimation (e.g., \code{list(lambda = 1)}).}

\item{method}{Optimization method to use. One of: \code{"nlminb"} (default), \code{"Nelder-Mead"}, \code{"BFGS"},
\code{"CG"}, \code{"L-BFGS-B"} or \code{"SANN"}. If \code{"nlminb"} is selected, R's \code{\link[stats]{nlminb}} function is used;
otherwise, R's \code{\link[stats]{optim}} function is used with the specified method.}

\item{use_moments}{Logical; if \code{TRUE} and \code{start = NULL}, attempts to use method of moments estimates
(via \code{gkwgetstartvalues}) as initial values. Default: \code{FALSE}.}

\item{hessian}{Logical; if \code{TRUE}, attempts to compute the Hessian matrix at the MLE to estimate
standard errors and the variance-covariance matrix using TMB's \code{sdreport}. Default: \code{TRUE}.}

\item{profile}{Logical; if \code{TRUE}, computes likelihood profiles for parameters using TMB's profiling capabilities. Default: \code{FALSE}.}

\item{npoints}{Integer; number of points to use in profile likelihood calculations (minimum 5). Only relevant if \code{profile = TRUE}. Default: 20.}

\item{plot}{Logical; if \code{TRUE}, generates diagnostic plots (histogram with fitted density, QQ-plot) using \code{ggplot2} and \code{patchwork}. Default: \code{TRUE}.}

\item{conf.level}{Numeric, the confidence level for confidence intervals calculated from standard errors (requires \code{hessian = TRUE}). Default: 0.95.}

\item{optimizer.control}{List of control parameters passed to the chosen optimizer.
The valid parameters depend on the \code{method} chosen. See Details.}

\item{submodels}{Logical; if \code{TRUE}, fits relevant nested submodels for comparison via likelihood ratio tests. Default: \code{FALSE}.}

\item{silent}{Logical; if \code{TRUE}, suppresses messages during fitting. Default: \code{FALSE}.}

\item{...}{Additional arguments (currently unused).}
}
\value{
An object of class \code{"gkwfit"} (inheriting from \code{"list"}) containing the fitted model results. Key components include:
\item{coefficients}{Named vector of estimated parameters (on their natural scale).}
\item{std.errors}{Named vector of estimated standard errors (if \code{hessian = TRUE}).}
\item{coef_summary}{Data frame summarizing estimates, SEs, z-values, and p-values.}
\item{vcov}{Variance-covariance matrix of the estimates (if \code{hessian = TRUE}).}
\item{loglik}{Log-likelihood value at the maximum.}
\item{AIC}{Akaike Information Criterion.}
\item{BIC}{Bayesian Information Criterion.}
\item{AICc}{Corrected Akaike Information Criterion.}
\item{data}{The input data vector used for fitting.}
\item{nobs}{Number of observations used.}
\item{df}{Number of estimated parameters.}
\item{convergence}{Logical indicating successful convergence.}
\item{message}{Convergence message from the optimizer.}
\item{family}{The specified distribution family.}
\item{method}{The specific optimization method used.}
\item{conf.int}{Data frame with confidence intervals (if \code{hessian = TRUE}).}
\item{conf.level}{The confidence level used.}
\item{optimizer}{The raw output object from the optimizer function.}
\item{obj}{The TMB object used for fitting (if available).}
\item{fixed}{The list of fixed parameters used.}
\item{profile}{A list containing likelihood profile results (if \code{profile = TRUE}).}
\item{submodels}{A list of fitted submodels (if \code{submodels = TRUE}).}
\item{lrt}{A list of likelihood ratio test results comparing nested models (if \code{submodels = TRUE}).}
\item{gof}{Goodness-of-fit statistics (e.g., AD, CvM, KS).}
\item{diagnostics}{Diagnostic information related to GOF tests.}
\item{plots}{A list or \code{patchwork} object containing ggplot objects for diagnostics (if \code{plot = TRUE}).}
\item{call}{The matched function call.}
}
\description{
Fits any distribution from the Generalized Kumaraswamy (GKw) family to data using maximum
likelihood estimation through Template Model Builder (TMB). The function supports several
optimization methods including R's nlminb and various optim algorithms.
}
\details{
The \code{gkwfit} function provides a unified interface for fitting the seven distributions in the Generalized Kumaraswamy family:
\itemize{
\item \strong{GKw}: 5 parameters (\eqn{\alpha, \beta, \gamma, \delta, \lambda}) - All positive.
\item \strong{BKw}: 4 parameters (\eqn{\alpha, \beta, \gamma, \delta}), \eqn{\lambda = 1} fixed - All positive.
\item \strong{KKw}: 4 parameters (\eqn{\alpha, \beta, \delta, \lambda}), \eqn{\gamma = 1} fixed - All positive.
\item \strong{EKw}: 3 parameters (\eqn{\alpha, \beta, \lambda}), \eqn{\gamma = 1, \delta = 0} fixed - All positive.
\item \strong{Mc} (McDonald / Beta Power): 3 parameters (\eqn{\gamma, \delta, \lambda}), \eqn{\alpha = 1, \beta = 1} fixed - All positive.
\item \strong{Kw} (Kumaraswamy): 2 parameters (\eqn{\alpha, \beta}), \eqn{\gamma = 1, \delta = 0, \lambda = 1} fixed - All positive.
\item \strong{Beta}: 2 parameters (\eqn{\gamma, \delta}), \eqn{\alpha = 1, \beta = 1, \lambda = 1} fixed - All positive. (\eqn{\gamma, \delta} correspond to standard Beta shape1, shape2).
}

This function uses Template Model Builder (TMB) for parameter estimation, which provides accurate and efficient automatic differentiation.

\strong{Optimizer Method (\code{method} argument):}
\itemize{
\item \code{"nlminb"}: Uses R's built-in \code{stats::nlminb} optimizer. Good for problems with box constraints. Default option.
\item \code{"Nelder-Mead"}: Uses R's \code{stats::optim} with the Nelder-Mead simplex algorithm, which doesn't require derivatives.
\item \code{"BFGS"}: Uses R's \code{stats::optim} with the BFGS quasi-Newton method for unconstrained optimization.
\item \code{"CG"}: Uses R's \code{stats::optim} with conjugate gradients method for unconstrained optimization.
\item \code{"L-BFGS-B"}: Uses R's \code{stats::optim} with the limited-memory BFGS method with box constraints.
\item \code{"SANN"}: Uses R's stats::optim with simulated annealing, a global optimization method useful for problems with multiple local minima.
}

\strong{Optimizer Control (\code{optimizer.control}):}
Pass a list with parameters specific to the chosen optimizer:
\itemize{
\item For \code{method = "nlminb"}: Controls are passed to \code{stats::nlminb}. See \code{?nlminb} for options like \code{eval.max}, \code{iter.max}, \code{trace}, \code{rel.tol}, etc.
\item For other methods: Controls are passed to \code{stats::optim}. See \code{?optim} for options like \code{maxit}, \code{trace}, \code{factr}, \code{pgtol}, etc.
}
If \code{optimizer.control} is empty, reasonable defaults are used for each method.

\strong{Data Preprocessing:} The function includes basic validation to ensure data is numeric and within (0, 1). It attempts to adjust values exactly at 0 or 1 by a small epsilon (\code{.Machine$double.eps^0.5}) with a warning, but stops if more than 10\% of data needs adjustment. It's generally recommended to handle boundary data appropriately \emph{before} calling \code{gkwfit}.
}
\examples{
\dontrun{
# Ensure the package and dependencies (like TMB, ggplot2) are loaded
# library(TMB) # Required for all fitting methods
# library(ggplot2) # Needed for plot = TRUE
# library(patchwork) # Needed for plot = TRUE

## Example 1: Fit Kumaraswamy using different optimization methods
set.seed(123)
n <- 200
# Assuming rkw is available
kw_data <- rkw(n, alpha = 2.5, beta = 1.5)

# Fit using default nlminb
fit_nlminb <- gkwfit(data = kw_data, family = "kw", method = "nlminb", silent = TRUE)

# Fit using Nelder-Mead
fit_nm <- gkwfit(data = kw_data, family = "kw", method = "Nelder-Mead", silent = TRUE)

# Fit using BFGS
fit_bfgs <- gkwfit(data = kw_data, family = "kw", method = "BFGS", silent = TRUE)

# Compare coefficients
coef_compare <- data.frame(
  NLMINB = coef(fit_nlminb),
  NM = coef(fit_nm),
  BFGS = coef(fit_bfgs)
)
print(round(coef_compare, 3))

## Example 2: Fit GKw with fixed delta and custom nlminb control
set.seed(456)
# Assuming rgkw is available
gkw_data <- rgkw(n, alpha = 2, beta = 3, gamma = 1.5, delta = 0, lambda = 1.2) # True delta = 0

# Fit fixing delta=0, increase iterations for nlminb
fit_gkw_fix <- gkwfit(
  data = gkw_data, family = "gkw",
  fixed = list(delta = 0), # Fix delta
  method = "nlminb",
  optimizer.control = list(iter.max = 500, trace = 1)
)

summary(fit_gkw_fix)

## Example 3: Fit Beta using L-BFGS-B and check profile likelihoods
set.seed(404)
beta_data <- stats::rbeta(n, shape1 = 2.0, shape2 = 3.0)

fit_beta <- gkwfit(
  data = beta_data, family = "beta",
  method = "L-BFGS-B",
  hessian = TRUE,
  profile = TRUE
)

# Display summary with SEs
summary(fit_beta)

# Check profile likelihood
plot(fit_beta$profile)

# End dontrun
}
}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded
random processes. \emph{Journal of Hydrology}, 46(1-2), 79-88. \doi{10.1016/0022-1694(80)90036-0}

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
\emph{Journal of Statistical Computation and Simulation}, 81(7), 883-898. \doi{10.1080/00949650903530745}

Kristensen, K., Nielsen, A., Berg, C. W., Skaug, H., & Bell, B. M. (2016). TMB: Automatic Differentiation and Laplace Approximation. \emph{Journal of Statistical Software}, 70(5), 1–21. \doi{10.18637/jss.v070.i05}
}
\seealso{
User-facing S3 methods: \code{\link{summary.gkwfit}}, \code{\link{print.gkwfit}}, \code{\link{plot.gkwfit}}, \code{\link{coef.gkwfit}}, \code{\link{vcov.gkwfit}}, \code{\link{logLik.gkwfit}}, \code{\link{confint.gkwfit}}. Density/distribution functions: \code{\link{dgkw}}, \code{\link{pgkw}}, \code{\link{qgkw}}, \code{\link{rgkw}}.
}
\author{
Lopes, J. E.
}
\keyword{distribution}
\keyword{hplot}
\keyword{mle}
\keyword{models}
\keyword{optimization}
