% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gkwfit.R
\name{gkwfit}
\alias{gkwfit}
\title{Fit Generalized Kumaraswamy Distribution via Maximum Likelihood Estimation}
\usage{
gkwfit(
  data,
  family = c("gkw", "bkw", "kkw", "ekw", "mc", "kw", "beta"),
  start = NULL,
  fixed = NULL,
  fit = c("tmb", "nlminb", "optim", "nr"),
  method = c("nlminb", "optim"),
  use_moments = FALSE,
  hessian = TRUE,
  profile = FALSE,
  npoints = 20,
  plot = TRUE,
  conf.level = 0.95,
  optimizer.control = list(),
  submodels = FALSE,
  silent = FALSE,
  ...
)
}
\arguments{
\item{data}{A numeric vector with values strictly between 0 and 1. Values at the boundaries
(0 or 1) may cause issues; consider slight adjustments if necessary (see Details).}

\item{family}{A character string specifying the distribution family. One of: \code{"gkw"} (default),
\code{"bkw"}, \code{"kkw"}, \code{"ekw"}, \code{"mc"}, \code{"kw"}, or \code{"beta"}. See Details for parameter specifications.}

\item{start}{Optional list with initial parameter values (using natural parameter names like \code{alpha}, \code{beta}, etc.).
If \code{NULL}, reasonable starting values will be determined, potentially using the method of moments if \code{use_moments = TRUE}.}

\item{fixed}{Optional list of parameters to be held fixed at specific values during estimation (e.g., \code{list(lambda = 1)}).}

\item{fit}{Estimation method/backend to be used:
\itemize{
\item \code{"tmb"}: (Recommended) Uses Template Model Builder for robust fitting via automatic differentiation. Can use \code{nlminb} or \code{optim} as the internal optimizer (see \code{method} argument). Requires the TMB package.
\item \code{"nr"}: Uses a custom C++ Newton-Raphson/Trust-Region implementation (\code{gkwreg::nrgkw}). Often fast but potentially less stable than TMB for complex cases.
\item \code{"nlminb"}: Uses R's \code{\link[stats]{nlminb}} function for optimization with box constraints. Requires analytic gradients for best performance.
\item \code{"optim"}: Uses R's \code{\link[stats]{optim}} function with the "L-BFGS-B" method for optimization with box constraints. Requires analytic gradients.
}
Default is \code{"nr"}.}

\item{method}{Character string specifying the internal optimizer when \code{fit = "tmb"}.
Choices are \code{"nlminb"} (default) or \code{"optim"} (which uses "BFGS" internally within TMB's optim call). This argument is ignored if \code{fit} is not \code{"tmb"}.}

\item{use_moments}{Logical; if \code{TRUE} and \code{start = NULL}, attempts to use method of moments estimates
(via \code{gkwgetstartvalues}) as initial values. Default: \code{FALSE}.}

\item{hessian}{Logical; if \code{TRUE}, attempts to compute the Hessian matrix at the MLE to estimate
standard errors and the variance-covariance matrix. For \code{fit = "tmb"}, uses TMB's \code{sdreport}.
For \code{fit = "nr"}, uses the Hessian from the C++ optimizer. For \code{fit = "nlminb"} or \code{fit = "optim"},
uses numerical differentiation via \code{numDeriv::hessian} (requires the \code{numDeriv} package). Default: \code{TRUE}.}

\item{profile}{Logical; if \code{TRUE} and \code{fit = "tmb"}, computes likelihood profiles for parameters using TMB's profiling capabilities. Default: \code{FALSE}. (Currently only implemented for TMB).}

\item{npoints}{Integer; number of points to use in profile likelihood calculations (minimum 5). Only relevant if \code{profile = TRUE}. Default: 20.}

\item{plot}{Logical; if \code{TRUE}, generates diagnostic plots (histogram with fitted density, QQ-plot) using \code{ggplot2} and \code{patchwork}. Default: \code{TRUE}.}

\item{conf.level}{Numeric, the confidence level for confidence intervals calculated from standard errors (requires \code{hessian = TRUE}). Default: 0.95.}

\item{optimizer.control}{List of control parameters passed to the chosen optimizer.
The valid parameters depend on the \code{fit} (and potentially \code{method}) chosen. See Details for defaults and links to specific optimizer documentation (\code{?TMB::MakeADFun}, \code{?gkwreg::nrgkw}, \code{?stats::nlminb}, \code{?stats::optim}).}

\item{submodels}{Logical; if \code{TRUE}, fits relevant nested submodels for comparison via likelihood ratio tests. Default: \code{FALSE}. (Implementation might depend on helper functions).}

\item{silent}{Logical; if \code{TRUE}, suppresses messages during fitting. Default: \code{FALSE}.}

\item{...}{Additional arguments (currently unused).}
}
\value{
An object of class \code{"gkwfit"} (inheriting from \code{"list"}) containing the fitted model results. Key components include:
\item{coefficients}{Named vector of estimated parameters (on their natural scale).}
\item{std.errors}{Named vector of estimated standard errors (if \code{hessian = TRUE}).}
\item{coef_summary}{Data frame summarizing estimates, SEs, z-values, and p-values.}
\item{vcov}{Variance-covariance matrix of the estimates (if \code{hessian = TRUE}). For \code{nlminb}/\code{optim}, relates to free parameters only.}
\item{hessian}{(If computed) The Hessian matrix evaluated at the MLE. For \code{nlminb}/\code{optim}, relates to the negative log-likelihood of free parameters.}
\item{loglik}{Log-likelihood value at the maximum.}
\item{AIC}{Akaike Information Criterion.}
\item{BIC}{Bayesian Information Criterion.}
\item{AICc}{Corrected Akaike Information Criterion.}
\item{data}{The input data vector used for fitting.}
\item{nobs}{Number of observations used.}
\item{df}{Number of estimated parameters.}
\item{convergence}{Logical indicating successful convergence (typically TRUE if optimizer code is 0).}
\item{message}{Convergence message from the optimizer.}
\item{family}{The specified distribution family.}
\item{method}{The core fitting method used (\code{"tmb"}, \code{"nr"}, \code{"nlminb"}, \code{"optim"}).}
\item{optimizer_method}{The specific optimizer algorithm used (e.g., \code{"nlminb"}, \code{"L-BFGS-B"}, \code{"trust-region"}).}
\item{conf.int}{Data frame with confidence intervals (if \code{hessian = TRUE}).}
\item{conf.level}{The confidence level used.}
\item{optimizer}{The raw output object from the optimizer function.}
\item{fixed}{The list of fixed parameters used.}
\item{iterations}{(If available) Number of iterations or function calls used by the optimizer.}
\item{condition_number}{(If available/calculated) Condition number of the Hessian, indicating potential multicollinearity or identifiability issues.}
\item{plots}{A list or \code{patchwork} object containing ggplot objects for diagnostics (if \code{plot = TRUE}).}
\item{profile}{A list containing likelihood profile results (if \code{profile = TRUE} and \code{fit = "tmb"}).}
\item{submodels}{A list of fitted submodels (if \code{submodels = TRUE}).}
\item{lrt}{A list of likelihood ratio test results comparing nested models (if \code{submodels = TRUE}).}
\item{gof}{Goodness-of-fit statistics (e.g., AD, CvM, KS).}
\item{diagnostics}{Diagnostic information related to GOF tests.}
\item{call}{The matched function call.}
}
\description{
Fits any distribution from the Generalized Kumaraswamy (GKw) family to data using maximum
likelihood estimation. The function supports several optimization backends, including
TMB (Template Model Builder), a custom Newton-Raphson implementation, and R's built-in
optimizers (\code{nlminb} and \code{optim} with L-BFGS-B).
}
\details{
The \code{gkwfit} function provides a unified interface for fitting the seven distributions in the Generalized Kumaraswamy family:
\itemize{
\item \strong{GKw}: 5 parameters (\eqn{\alpha, \beta, \gamma, \delta, \lambda}) - All positive.
\item \strong{BKw}: 4 parameters (\eqn{\alpha, \beta, \gamma, \delta}), \eqn{\lambda = 1} fixed - All positive.
\item \strong{KKw}: 4 parameters (\eqn{\alpha, \beta, \delta, \lambda}), \eqn{\gamma = 1} fixed - All positive.
\item \strong{EKw}: 3 parameters (\eqn{\alpha, \beta, \lambda}), \eqn{\gamma = 1, \delta = 0} fixed - All positive.
\item \strong{Mc} (McDonald / Beta Power): 3 parameters (\eqn{\gamma, \delta, \lambda}), \eqn{\alpha = 1, \beta = 1} fixed - All positive.
\item \strong{Kw} (Kumaraswamy): 2 parameters (\eqn{\alpha, \beta}), \eqn{\gamma = 1, \delta = 0, \lambda = 1} fixed - All positive.
\item \strong{Beta}: 2 parameters (\eqn{\gamma, \delta}), \eqn{\alpha = 1, \beta = 1, \lambda = 1} fixed - All positive. (\eqn{\gamma, \delta} correspond to standard Beta shape1, shape2).
}
Note: While the theoretical range for \eqn{\delta} is often \eqn{\delta \ge 0}, the \code{"nlminb"} and \code{"optim"} fitting methods currently enforce a strict positive lower bound (\code{> 1e-5}) by default for numerical stability, matching the other parameters.

\strong{Choosing the Fitting Method (\code{fit} argument):}
\itemize{
\item \code{"tmb"}: Generally recommended. Uses C++ templates via the TMB package for automatic differentiation, which is accurate and efficient. Requires TMB installation. The internal optimizer used by TMB can be chosen with the \code{method} argument (\code{"nlminb"} or \code{"optim"}).
\item \code{"nr"}: Uses a custom C++ implementation (\code{gkwreg::nrgkw}) featuring Newton-Raphson and Trust-Region methods with adaptive scaling and regularization. Can be very fast but might be sensitive to starting values or complex likelihood surfaces. Does not require TMB.
\item \code{"nlminb"}: Uses R's built-in \code{stats::nlminb} optimizer. Good for problems with box constraints. Relies on user-provided analytic gradients (via \verb{gr*} functions) for efficiency.
\item \code{"optim"}: Uses R's built-in \code{stats::optim} optimizer with the "L-BFGS-B" method, suitable for box constraints. Also relies on analytic gradients.
}

\strong{Optimizer Control (\code{optimizer.control}):}
Pass a list with parameters specific to the chosen optimizer:
\itemize{
\item For \code{fit = "tmb"}: Controls are passed to \code{TMB::MakeADFun}'s internal call to \code{nlminb} or \code{optim}. See \code{?nlminb} or \code{?optim} for options like \code{eval.max}, \code{iter.max}, \code{trace}, \code{rel.tol} (for nlminb) or \code{maxit}, \code{trace}, \code{factr}, \code{pgtol} (for optim/BFGS).
\item For \code{fit = "nr"}: Controls are passed to \code{gkwreg::nrgkw}. See \code{?gkwreg::nrgkw} for options like \code{tol}, \code{max_iter}, \code{optimization_method} (within \code{nrgkw}), \code{adaptive_scaling}, \code{min_param_val}, etc.
\item For \code{fit = "nlminb"}: Controls passed to \code{stats::nlminb}. See \code{?nlminb} (e.g., \code{eval.max}, \code{iter.max}, \code{trace}, \code{rel.tol}, \code{abs.tol}).
\item For \code{fit = "optim"}: Controls passed to \code{stats::optim}. See \code{?optim} (e.g., \code{maxit}, \code{trace}, \code{factr}, \code{pgtol}).
}
If \code{optimizer.control} is empty, reasonable defaults are used for each method.

\strong{Data Preprocessing:} The function includes basic validation to ensure data is numeric and within (0, 1). It attempts to adjust values exactly at 0 or 1 by a small epsilon (\code{.Machine$double.eps^0.5}) with a warning, but stops if more than 10\% of data needs adjustment. It's generally recommended to handle boundary data appropriately \emph{before} calling \code{gkwfit}.
}
\examples{
\dontrun{
# Ensure the package and dependencies (like TMB, numDeriv, ggplot2) are loaded
# library(gkwreg) # Or your package name
# library(TMB) # Needed for fit = "tmb"
# library(numDeriv) # Needed for hessian = TRUE with nlminb/optim
# library(ggplot2) # Needed for plot = TRUE
# library(patchwork) # Needed for plot = TRUE

## Example 1: Fit Kumaraswamy using different methods
set.seed(123)
n <- 200
# Assuming rkw is available
kw_data <- rkw(n, alpha = 2.5, beta = 1.5)

# Fit using TMB (default internal method nlminb)
fit_tmb <- gkwfit(data = kw_data, family = "kw", fit = "tmb", silent = TRUE)

# Fit using custom Newton-Raphson
fit_nr <- gkwfit(data = kw_data, family = "kw", fit = "nr", silent = TRUE)

# Fit using R's nlminb
fit_nlminb <- gkwfit(data = kw_data, family = "kw", fit = "nlminb", silent = TRUE)

# Fit using R's optim (L-BFGS-B)
fit_optim <- gkwfit(data = kw_data, family = "kw", fit = "optim", silent = TRUE)

# Compare coefficients
coef_compare <- data.frame(
  TMB = coef(fit_tmb),
  NR = coef(fit_nr),
  NLMINB = coef(fit_nlminb),
  OPTIM = coef(fit_optim)
)
print(round(coef_compare, 3))

## Example 2: Fit GKw with fixed delta and custom nlminb control
set.seed(456)
# Assuming rgkw is available
gkw_data <- rgkw(n, alpha = 2, beta = 3, gamma = 1.5, delta = 0, lambda = 1.2) # True delta = 0

# Fit fixing delta=0, increase iterations for nlminb
fit_gkw_fix <- gkwfit(
  data = gkw_data, family = "gkw",
  fixed = list(delta = 0), # Fix delta
  fit = "nlminb",
  optimizer.control = list(iter.max = 500, trace = 1)
)

summary(fit_gkw_fix)

## Example 3: Fit Beta using optim and check SEs
set.seed(404)
beta_data <- stats::rbeta(n, shape1 = 2.0, shape2 = 3.0)

fit_beta_optim <- gkwfit(
  data = beta_data, family = "beta",
  fit = "optim", hessian = TRUE
)

# Display summary with SEs
summary(fit_beta_optim)

# Check variance-covariance matrix
vcov(fit_beta_optim)

# End dontrun
}
}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded
random processes. \emph{Journal of Hydrology}, 46(1-2), 79-88. \doi{10.1016/0022-1694(80)90036-0}

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
\emph{Journal of Statistical Computation and Simulation}, 81(7), 883-898. \doi{10.1080/00949650903530745}

Nash, J. C. (1990). \emph{Compact numerical methods for computers: linear algebra and function minimisation}. Adam Hilger. (Basis for optim)

Gay, D. M. (1990). Usage summary for selected optimization routines. \emph{Computing Science Technical Report}, 153. AT&T Bell Laboratories. (nlminb based on PORT library)

Kristensen, K., Nielsen, A., Berg, C. W., Skaug, H., & Bell, B. M. (2016). TMB: Automatic Differentiation and Laplace Approximation. \emph{Journal of Statistical Software}, 70(5), 1–21. \doi{10.18637/jss.v070.i05}
}
\seealso{
Provided internal functions: \code{\link{.fit_tmb}}, \code{\link{.fit_nr}}, \code{\link{.fit_nlminb}}, \code{\link{.fit_optim}}. User-facing S3 methods: \code{\link{summary.gkwfit}}, \code{\link{print.gkwfit}}, \code{\link{plot.gkwfit}}, \code{\link{coef.gkwfit}}, \code{\link{vcov.gkwfit}}, \code{\link{logLik.gkwfit}}, \code{\link{confint.gkwfit}}. Density/distribution functions: \code{\link{dgkw}}, \code{\link{pgkw}}, \code{\link{qgkw}}, \code{\link{rgkw}}.
}
\author{
Lopes, J. E.
}
\keyword{distribution}
\keyword{hplot}
\keyword{mle}
\keyword{models}
\keyword{optimization}
