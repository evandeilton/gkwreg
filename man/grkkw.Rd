% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{grkkw}
\alias{grkkw}
\title{Gradient Function for Kumaraswamy-Kumaraswamy Log-Likelihood}
\usage{
grkkw(par, data)
}
\arguments{
\item{par}{NumericVector of length 4 containing parameters (α, β, δ, λ) in that order.
All parameters must be positive.}

\item{data}{NumericVector of observations, where all values must be in the open interval (0,1).}
}
\value{
NumericVector of length 4 containing the gradient components (partial derivatives)
of the negative log-likelihood with respect to each parameter (α, β, δ, λ).
Returns a vector of NaN values if any parameters or data values are invalid.
}
\description{
Calculates the gradient vector (partial derivatives) of the negative log-likelihood
function for the Kumaraswamy-Kumaraswamy (KwKw) distribution. This function provides
the exact gradient needed for efficient optimization in maximum likelihood estimation.
The KwKw is a submodel of GKw with γ = 1 fixed.
}
\details{
The gradient vector contains the following partial derivatives of the negative log-likelihood:

\deqn{
\frac{\partial \ell}{\partial \alpha} = \frac{n}{\alpha} + \sum_{i=1}^{n}\log(x_i) -
(\beta-1)\sum_{i=1}^{n}\frac{x_i^{\alpha}\log(x_i)}{1-x_i^{\alpha}} +
(\lambda-1)\sum_{i=1}^{n}\frac{\beta(1-x_i^{\alpha})^{\beta-1}x_i^{\alpha}\log(x_i)}{1-(1-x_i^{\alpha})^{\beta}} -
\delta\sum_{i=1}^{n}\frac{\lambda[1-(1-x_i^{\alpha})^{\beta}]^{\lambda-1}\beta(1-x_i^{\alpha})^{\beta-1}x_i^{\alpha}\log(x_i)}{1-[1-(1-x_i^{\alpha})^{\beta}]^{\lambda}}
}

\deqn{
\frac{\partial \ell}{\partial \beta} = \frac{n}{\beta} + \sum_{i=1}^{n}\log(1-x_i^{\alpha}) -
(\lambda-1)\sum_{i=1}^{n}\frac{(1-x_i^{\alpha})^{\beta}\log(1-x_i^{\alpha})}{1-(1-x_i^{\alpha})^{\beta}} +
\delta\sum_{i=1}^{n}\frac{\lambda[1-(1-x_i^{\alpha})^{\beta}]^{\lambda-1}(1-x_i^{\alpha})^{\beta}\log(1-x_i^{\alpha})}{1-[1-(1-x_i^{\alpha})^{\beta}]^{\lambda}}
}

\deqn{
\frac{\partial \ell}{\partial \delta} = \frac{n}{\delta+1} +
\sum_{i=1}^{n}\log(1-[1-(1-x_i^{\alpha})^{\beta}]^{\lambda})
}

\deqn{
\frac{\partial \ell}{\partial \lambda} = \frac{n}{\lambda} +
\sum_{i=1}^{n}\log(1-(1-x_i^{\alpha})^{\beta}) -
\delta\sum_{i=1}^{n}\frac{[1-(1-x_i^{\alpha})^{\beta}]^{\lambda}\log(1-(1-x_i^{\alpha})^{\beta})}{1-[1-(1-x_i^{\alpha})^{\beta}]^{\lambda}}
}

where:
\itemize{
\item \deqn{v_i = 1 - x_i^{\alpha}}
\item \deqn{w_i = 1 - v_i^{\beta} = 1 - (1-x_i^{\alpha})^{\beta}}
\item \deqn{z_i = 1 - w_i^{\lambda} = 1 - (1-(1-x_i^{\alpha})^{\beta})^{\lambda}}
}

The implementation includes several numerical safeguards:
\itemize{
\item Parameter and data validation with appropriate error handling
\item Clamping of intermediate values to avoid numerical underflow/overflow
\item Efficient vector operations using Armadillo C++ library
}

The returned gradient is negated to align with minimization of negative log-likelihood
in optimization routines.
}
\examples{
\dontrun{
# Generate sample data from a KKw distribution
set.seed(123)
x <- rkkw(100, 2, 3, 1.5, 0.5)
hist(x, breaks = 20, main = "KKw(2, 3, 1.5, 0.5) Sample")

# Use in optimization with Hessian-based methods
result <- optim(c(0.5, 0.5, 0.5, 0.5), llkkw, method = "BFGS",
                hessian = TRUE, data = x)

# Compare numerical and analytical derivatives
num_grad <- numDeriv::grad(llkkw, x = result$par, data = x)
num_hess <- numDeriv::hessian(llkkw, x = result$par, data = x)

ana_grad <- grkkw(result$par, data = x)
ana_hess <- hskkw(result$par, data = x)

# Check differences (should be very small)
round(num_grad - ana_grad, 4)
round(num_hess - ana_hess, 4)
}

}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded random processes.
Journal of Hydrology, 46(1-2), 79-88.

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
Journal of Statistical Computation and Simulation, 81(7), 883-898.
}
\seealso{
\code{\link[gkwreg]{llkkw}} for the negative log-likelihood function,
\code{\link[gkwreg]{hskkw}} for the Hessian matrix of the KwKw log-likelihood,
\code{\link[gkwreg]{dkkw}} for the KwKw density function,
}
