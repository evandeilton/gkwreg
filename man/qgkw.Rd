% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{qgkw}
\alias{qgkw}
\title{Quantile Function for Generalized Kumaraswamy Distribution}
\usage{
qgkw(
  p,
  alpha = as.numeric(c(1)),
  beta = as.numeric(c(1)),
  gamma = as.numeric(c(1)),
  delta = as.numeric(c(0)),
  lambda = as.numeric(c(1)),
  lower_tail = TRUE,
  log_p = FALSE
)
}
\arguments{
\item{p}{Vector of probabilities for which to compute quantiles. Values should be in (0,1),
or in (-Inf,0] if log_p=TRUE.}

\item{alpha}{Shape parameter α > 0 (scalar or vector). Controls the left tail behavior. Default: 1.0.}

\item{beta}{Shape parameter β > 0 (scalar or vector). Controls the right tail behavior. Default: 1.0.}

\item{gamma}{Shape parameter γ > 0 (scalar or vector). Affects the central shape. Default: 1.0.}

\item{delta}{Shape parameter δ ≥ 0 (scalar or vector). Introduces additional flexibility. Default: 0.0.}

\item{lambda}{Shape parameter λ > 0 (scalar or vector). Controls overall dispersion. Default: 1.0.}

\item{lower_tail}{Logical; if TRUE (default), probabilities are P(X ≤ x), otherwise P(X > x).}

\item{log_p}{Logical; if TRUE, probabilities are provided as log(p). Default: FALSE.}
}
\value{
Vector of quantiles corresponding to each probability in p. Returns:
\itemize{
\item 0 for probabilities ≤ 0 (or when log(p) = -Inf if log_p=TRUE)
\item 1 for probabilities ≥ 1 (or when log(p) = 0 if log_p=TRUE)
\item NA for invalid inputs (including p > 1 when log_p=TRUE, which would be log(p) > 0)
\item NA for invalid parameters (any of α, β, γ ≤ 0, δ < 0, or λ ≤ 0)
}
}
\description{
Calculates the quantile function (inverse CDF) of the Generalized Kumaraswamy
distribution GKw(α, β, γ, δ, λ). For a given probability p, returns the value x
such that P(X ≤ x) = p, where X follows a GKw distribution with the specified parameters.
}
\details{
According to Carrasco et al. (2010), the quantile function for the GKw distribution is
derived by inverting the CDF DLaYSBB9ANIB4LtJCEXcXpDwWWDrCT4F-\deqn{
Q(p) = \{1 - (1 - (I^{-1}_{p}(\gamma, \delta+1))^{1/\lambda})^{1/\beta}\}^{1/\alpha}
}

where \eqn{I^{-1}_{p}(a, b)} is the inverse regularized incomplete beta function.

The implementation follows these steps to compute the quantile:
\enumerate{
\item Find y = qbeta(p, γ, δ+1)
\item Compute \deqn{v = y^(1/λ)}
  \item Compute \deqn{tmp = 1 - v}
\item Compute \deqn{tmp2 = tmp^(1/β)}
  \item Compute \deqn{q = (1 - tmp2)^(1/α)}
}

Special care is taken at each step to handle numerical issues:
\itemize{
\item Boundary cases (p ≤ 0 or p ≥ 1) are handled directly
\item Intermediate results are checked for validity at each transformation step
\item Special cases where parameters equal 1 are optimized for speed and accuracy
}

This implementation supports vectorized parameters, allowing any combination of
vector and scalar inputs for all distribution parameters, with proper broadcasting
for vectors of different lengths.
}
\examples{
\dontrun{
# Basic quantile calculation
qgkw(0.5, 2, 3, 1, 0, 1)  # Median of GKw(2,3,1,0,1)

# Computing multiple quantiles
probs <- c(0.1, 0.25, 0.5, 0.75, 0.9)
qgkw(probs, 2, 3, 1, 0, 1)  # Various percentiles

# Upper tail quantiles
qgkw(0.1, 2, 3, 1, 0, 1, lower_tail = FALSE)  # 90th percentile

# Log probabilities
qgkw(log(0.5), 2, 3, 1, 0, 1, log_p = TRUE)

# Vectorized parameters
alphas <- c(0.5, 1.0, 2.0)
betas <- c(1.0, 2.0, 3.0)
qgkw(0.5, alphas, betas)  # Will return 3 quantile values

# Verify inverse relationship with pgkw
p <- 0.75
x <- qgkw(p, 2, 3, 1, 0, 1)
pgkw(x, 2, 3, 1, 0, 1)  # Should be approximately 0.75
}

}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded random processes.
Journal of Hydrology, 46(1-2), 79-88.

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
Journal of Statistical Computation and Simulation, 81(7), 883-898.
}
