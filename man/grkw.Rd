% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{grkw}
\alias{grkw}
\title{Gradient Function for Kumaraswamy Log-Likelihood}
\usage{
grkw(par, data)
}
\arguments{
\item{par}{NumericVector of length 2 containing parameters (α, β) in that order.
All parameters must be positive.}

\item{data}{NumericVector of observations, where all values must be in the open interval (0,1).}
}
\value{
NumericVector of length 2 containing the gradient components (partial derivatives)
of the negative log-likelihood with respect to each parameter (α, β).
Returns a vector of NaN values if any parameters or data values are invalid.
}
\description{
Calculates the gradient vector (partial derivatives) of the negative log-likelihood
function for the Kumaraswamy (Kw) distribution. This function provides the exact
gradient needed for efficient optimization in maximum likelihood estimation.
The Kw is a submodel of GKw with γ = 1, δ = 0, and λ = 1 fixed.
}
\details{
The gradient vector contains the following partial derivatives of the negative log-likelihood:

\deqn{
\frac{\partial \ell}{\partial \alpha} = \frac{n}{\alpha} + \sum_{i=1}^{n}\log(x_i) -
\sum_{i=1}^{n}\left[\frac{(\beta-1)x_i^{\alpha}\log(x_i)}{1-x_i^{\alpha}}\right]
}

\deqn{
\frac{\partial \ell}{\partial \beta} = \frac{n}{\beta} + \sum_{i=1}^{n}\log(1-x_i^{\alpha})
}

The implementation includes several numerical safeguards:
\itemize{
\item Parameter and data validation with appropriate error handling
\item Clamping of intermediate values to avoid numerical underflow/overflow
\item Efficient vector operations using Armadillo C++ library
}

The returned gradient is negated to align with minimization of negative log-likelihood
in optimization routines.
}
\examples{
\dontrun{
# Generate sample data from a Kw distribution
set.seed(123)
x <- rkw(100, 2, 3)
hist(x, breaks = 20, main = "Kw(2, 3) Sample")

# Use in optimization with Hessian-based methods
result <- optim(c(0.5, 0.5), llkw, method = "BFGS",
                hessian = TRUE, data = x)

# Compare numerical and analytical derivatives
num_grad <- numDeriv::grad(llkw, x = result$par, data = x)
num_hess <- numDeriv::hessian(llkw, x = result$par, data = x)

ana_grad <- grkw(result$par, data = x)
ana_hess <- hskw(result$par, data = x)

# Check differences (should be very small)
round(num_grad - ana_grad, 4)
round(num_hess - ana_hess, 4)
}

}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded random processes.
Journal of Hydrology, 46(1-2), 79-88.

Jones, M. C. (2009). Kumaraswamy's distribution: A beta-type distribution with some tractability advantages.
Statistical Methodology, 6(1), 70-81.
}
\seealso{
\code{\link[gkwreg]{llkw}} for the negative log-likelihood function,
\code{\link[gkwreg]{hskw}} for the Hessian matrix of the Kw log-likelihood,
\code{\link[gkwreg]{dkw}} for the Kw density function,
}
