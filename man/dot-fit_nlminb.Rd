% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gkwfit.R
\name{.fit_nlminb}
\alias{.fit_nlminb}
\title{Fit GKw family distributions using nlminb}
\usage{
.fit_nlminb(
  data,
  family,
  start,
  fixed,
  hessian,
  conf.level,
  optimizer.control,
  silent
)
}
\arguments{
\item{data}{Numeric vector with values in the (0, 1) interval.}

\item{family}{Character string specifying the distribution family (e.g. "gkw", "kw", "beta", etc.).}

\item{start}{Named list with initial parameter values.}

\item{fixed}{Named list of parameters to be held fixed (not estimated).}

\item{hessian}{Logical; if \code{TRUE}, attempts to compute standard errors and covariance matrix
using an analytic Hessian (if available) or numeric approximations in a fallback order.}

\item{conf.level}{Confidence level for intervals (e.g. 0.95).}

\item{optimizer.control}{List of control parameters passed to \code{nlminb()}.
For example: \code{list(eval.max=300, iter.max=200)}.}

\item{silent}{Logical; if \code{TRUE}, suppresses certain messages during the fitting procedure.}
}
\value{
A list containing the fitted results with the same structure as \code{.fit_nr}:
\describe{
\item{\code{coefficients}}{Estimated parameters for the specified family.}
\item{\code{std.errors}}{Standard errors (NA for fixed parameters or if no valid Hessian is found).}
\item{\code{coef_summary}}{A data frame summarizing coefficients, standard errors, z-values, and p-values.}
\item{\code{vcov}}{Covariance matrix (if successfully computed, otherwise \code{NULL}).}
\item{\code{loglik}}{Log-likelihood at the optimum.}
\item{\code{AIC}, \code{BIC}, \code{AICc}}{Information criteria.}
\item{\code{data}}{The original data used.}
\item{\code{nobs}}{Number of observations used.}
\item{\code{df}}{Number of free parameters estimated.}
\item{\code{convergence}}{Logical indicating whether \code{nlminb} converged successfully.}
\item{\code{message}}{Optimizer status message from \code{nlminb}.}
\item{\code{method}}{String indicating the fitting method (\code{"nlminb"}).}
\item{\code{optimizer_method}}{String \code{"nlminb"}.}
\item{\code{conf.int}}{Data frame with confidence intervals (if standard errors are available).}
\item{\code{conf.level}}{Confidence level used.}
\item{\code{optimizer}}{The raw output list from \code{nlminb()}.}
\item{\code{fixed}}{Named list of parameters that were held fixed.}
\item{\code{iterations}}{Number of iterations used (if available).}
\item{\code{param_history}}{NA, since \code{nlminb} does not track parameter history by default.}
\item{\code{loglik_history}}{NA, since \code{nlminb} does not track log-likelihood history.}
\item{\code{gradient}}{Final gradient at the solution (if available).}
\item{\code{condition_number}}{NA, not computed in this method.}
\item{\code{scaling_factors}}{NA, not used in this method.}
}
}
\description{
This function implements maximum likelihood estimation (MLE) of the GKw family
distributions using the base R \code{nlminb} optimizer with an analytical gradient.
It follows the same input-output signature as \code{.fit_nr}, but uses a different
optimization routine.
}
\details{
Hessian-based standard error calculation follows this priority:
\enumerate{
\item If an analytic Hessian \code{hs<family>} is found and succeeds, use it.
\item Otherwise, attempt a numeric Hessian using \code{numDeriv::hessian}.
\item Otherwise, use \code{stats::optimHess} at the final solution for \code{nlminb}.
}

The C++ functions for log-likelihood, gradient, and Hessian must each have the signature:
\code{function(par, data)}, where both \code{par} and \code{data} are numeric vectors
(and \code{par} must match the order given by \code{.get_family_param_info(family)$names}).
}
\examples{
\dontrun{
# Suppose you have ll<family>, gr<family>, and hs<family> defined,
# all returning negative log-likelihood, negative gradient, etc.
# Then call:
# fit <- .fit_nlminb(
#   data = runif(100, min=0.01, max=0.99),
#   family = "gkw",
#   start = list(alpha=2, beta=2, gamma=1, delta=0.5, lambda=2),
#   fixed = NULL,
#   hessian = TRUE,
#   conf.level = 0.95,
#   optimizer.control = list(eval.max=300, iter.max=200),
#   silent = FALSE
# )
}
}
\keyword{internal}
