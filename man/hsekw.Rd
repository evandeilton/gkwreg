% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{hsekw}
\alias{hsekw}
\title{Analytic Hessian Matrix for Exponentiated Kumaraswamy Distribution}
\usage{
hsekw(par, data)
}
\arguments{
\item{par}{Numeric vector of length 3 containing the parameters
(α, β, λ) in that order. All parameters must be positive.}

\item{data}{Numeric vector of observations, where all values must be
in the open interval (0,1).}
}
\value{
A 3×3 numeric matrix representing the Hessian of the negative
log-likelihood function. If parameters or data are invalid
(parameters ≤ 0 or data outside (0,1)), returns a matrix of
NaN values.
}
\description{
Computes the analytic Hessian matrix of the log-likelihood function for
the Exponentiated Kumaraswamy (EKw) distribution. This function provides
exact second derivatives needed for optimization and inference.
}
\details{
The log-likelihood for the Exponentiated Kumaraswamy distribution is:

\deqn{
\ell(\theta) = n \ln(\lambda) + n \ln(\alpha) + n \ln(\beta)
+ (\alpha-1) \sum \ln(x_i)
+ (\beta-1) \sum \ln(1 - x_i^\alpha)
+ (\lambda-1) \sum \ln\{1 - (1 - x_i^\alpha)^\beta\}
}

The implementation computes all second derivatives analytically for each term.
For computational efficiency, the following transformations are used:
\itemize{
\item \deqn{A = x^α} and derivatives
\item \deqn{v = 1 - A}
\item \deqn{w = 1 - v^β}
}

The returned Hessian matrix has the following structure:
\itemize{
\item Rows/columns 1-3 correspond to α, β, λ respectively
\item The matrix is symmetric (as expected for a Hessian)
\item The matrix represents second derivatives of the negative log-likelihood
}

This function is implemented in C++ for computational efficiency.
}
\examples{
\dontrun{
# Generate sample data from an EKw distribution
set.seed(123)
x <- rekw(100, 2, 3, 0.5)
hist(x, breaks = 20, main = "EKw(2, 3, 0.5) Sample")

# Use in optimization with Hessian-based methods
result <- optim(c(0.5, 0.5, 0.5), llekw, method = "BFGS",
                hessian = TRUE, data = x)

# Compare numerical and analytical derivatives
num_grad <- numDeriv::grad(llekw, x = result$par, data = x)
num_hess <- numDeriv::hessian(llekw, x = result$par, data = x)

ana_grad <- grekw(result$par, data = x)
ana_hess <- hsekw(result$par, data = x)

# Check differences (should be very small)
round(num_grad - ana_grad, 4)
round(num_hess - ana_hess, 4)

}


}
\references{
Kumaraswamy, P. (1980). A generalized probability density function for double-bounded random processes.
Journal of Hydrology, 46(1-2), 79-88.

Cordeiro, G. M., & de Castro, M. (2011). A new family of generalized distributions.
Journal of Statistical Computation and Simulation, 81(7), 883-898.
}
