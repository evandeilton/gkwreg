name: R-CMD-check

on:
  push:
    branches: [main, master]
  pull_request:

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      # Attempt to use a simpler temp directory on Windows
      TMPDIR: C:/Rtmp
      TEMP: C:/Rtmp
      TMP: C:/Rtmp

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # Add Rtools to PATH, necessary for compilation on Windows
      - uses: r-lib/actions/setup-rtools@v2
        if: runner.os == 'Windows'
        with:
           rtools-version: '44' # Or your preferred Rtools version

      # Create the simplified temp directory on Windows
      - name: Create Temp Dir (Windows)
        if: runner.os == 'Windows'
        run: mkdir C:/Rtmp || echo "C:/Rtmp already exists"
        shell: cmd # Use cmd for basic directory creation

      # Install package dependencies using pak
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # Run R CMD check using the dedicated action
      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true # Useful for debugging check failures
          # Pass check arguments matching your previous setup
          args: 'c("--no-manual", "--compact-vignettes=gs+qpdf")'
          # Action defaults to error_on = "warning", set to "error" if needed
          # error_on: "error"

      # The check-r-package action uploads check results as artifacts,
      # so manual log display might not be necessary unless further
      # debugging is needed during the run itself.
      # - name: Display R CMD check logs on error
      #   if: failure()
      #   run: |
      #     # Adjust path based on where check-r-package puts logs if needed
      #     # Example (may vary):
      #     cat ${{ runner.temp }}/check/gkwreg.Rcheck/00install.out || echo "Install log not found"
      #     cat ${{ runner.temp }}/check/gkwreg.Rcheck/00check.log || echo "Check log not found"
      #   shell: bash



# name: R-CMD-check
# on:
#   push:
#     branches: [main, master]
#   pull_request:
# permissions: read-all
# jobs:
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#           - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
#           - {os: ubuntu-latest,   r: 'release'}
#           - {os: ubuntu-latest,   r: 'oldrel-1'}
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#     steps:
#       - uses: actions/checkout@v4
#       - uses: r-lib/actions/setup-pandoc@v2
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
          
#       # Configuração específica para Windows - adiciona Rtools
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         if: matrix.config.os == 'windows-latest'
#         with:
#           extra-packages: any::rcmdcheck
#           needs: check
#           windows-path-include-mingw: true
          
#       # Instalação de dependências do sistema para Windows
#       - name: Install system dependencies (Windows)
#         if: matrix.config.os == 'windows-latest'
#         run: |
#           # Tentar pacotes específicos do MinGW que estão disponíveis via Chocolatey
#           choco install --no-progress mingw-w64 -y || echo "MinGW installation attempted"
#           # Verificar se temos acesso ao compilador
#           g++ --version || echo "G++ not found in PATH"
          
#       - name: Install pak
#         run: Rscript -e 'install.packages("pak", repos = "https://cran.rstudio.com")'
        
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: any::rcmdcheck
#           needs: check
          
#       - name: Run R CMD check
#         run: |
#           R CMD check --no-manual --compact-vignettes=gs+qpdf
#         continue-on-error: true
        
#       - name: Display R CMD check logs on error
#         if: failure()
#         run: |
#           cat D:/a/gkwreg/gkwreg/check/gkwreg.Rcheck/00install.out || echo "Install log not found"
#           cat D:/a/gkwreg/gkwreg/check/gkwreg.Rcheck/00check.log || echo "Check log not found"
          
#       - uses: r-lib/actions/check-r-package@v2
#         with:
#           upload-snapshots: true
#           build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
